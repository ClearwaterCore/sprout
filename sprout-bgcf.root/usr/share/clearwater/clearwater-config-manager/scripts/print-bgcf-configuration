#! /usr/bin/python

# @file print-bgcf-configuration
#
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2016  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

import json, sys
from textwrap import dedent

# Expected format for the BGCF file
EXPECTED_FORMAT = dedent("""The expected format is:\n\
{
\"routes\" :
 [
   {
     \"name\" : \"<route 1 descriptive name>\",
     \"<domain|number>\" : \"<SIP trunk IP address, domain name or routing number>\",
     \"route\" : [<\"IBCF SIP URI\">, <\"IBCF SIP URI\">,...]
   },
   ...
 ]
}""")

source = sys.argv[1] if len(sys.argv) > 1 else "/etc/clearwater/bgcf.json"

# This does some basic validation of the BGCF configuration file, and
# prints the contents
try:
    with open(source) as bgcf_file:
        try:
            bgcf_data = json.load(bgcf_file)
            routes = bgcf_data["routes"]

            if routes:
                try:
                    for bgcf_route in routes:
                        name = bgcf_route["name"]
                        route = bgcf_route["route"]
                        value = ""
                        value_count = 0

                        try:
                            domain = bgcf_route["domain"]
                            value = "Domain: " + domain
                            value_count += 1
                        except KeyError as e:
                            pass

                        try:
                            number = bgcf_route["number"]
                            value = "Number: " + number
                            value_count += 1
                        except KeyError as e:
                            pass

                        if value_count != 1:
                            raise KeyError

                        print "  Name: {}".format(name)
                        print "  {}".format(value)
                        print "  Route: "
                        for route_part in route:
                            print "    {}".format(route_part)
                        print ""

                except KeyError as e:
                    print "Invalid BGCF entry detected in file.\n"
                    print EXPECTED_FORMAT

            else:
                print "Configuration file is present, but contains no entries.\n"
                print EXPECTED_FORMAT

        except ValueError, KeyError:
            print "\nInvalid BGCF file at %s\n" % source
            print EXPECTED_FORMAT

except IOError:
    print "\nNo BGCF file at %s\n" % source